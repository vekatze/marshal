import {
  binary-builder.entity {builder},
  core.binary {binary},
  core.cell {cell, mutate},
}

data marshal(a) {
| Marshal(
    encode: (buffer: &builder, value: &a) -> unit,
    decode: (bytes: &binary, cursor: &cell(int)) -> ?a,
    necess: (a) -> meta a,
  )
}

define _proceed(cursor: &cell(int), offset: int): unit {
  mutate(cursor, function (x) {
    add-int(x, offset)
  })
}
