import {
  core.float.show {show-float},
  this.move.common.get {get-int32},
  this.move.common.put {put-float32},
  this.move.decode {decode},
  this.move.encode {encode},
  this.rule.get-kit {get-kit},
  this.rule.put-kit {put-kit},
  this.rule.sero {Sero, sero},
}

define _put(h: &put-kit, x: &float32): unit {
  put-float32(h, *x)
}

define _get(h: &get-kit): ?meta float32 {
  try v = get-int32(h) in
  Right(quote {magic cast(int32, float32, v)})
}

inline float32-sero: sero(float32, float32) {
  Sero of {
    put = _put,
    get = _get,
  }
}

define zen(): unit {
  pin val = -3.8 in
  match decode(float32-sero, encode(float32-sero, val, 8)) {
  | Left(_) =>
    print("left")
  | Right(v) =>
    printf("value: {}\n", [show-float(fpext-float32-float(v))])
  }
}
