import {
  core.int.show {show-int},
  this.move.common.get {get-int16},
  this.move.common.put {put-int16},
  this.move.decode {decode},
  this.move.encode {encode},
  this.rule.get-handle {get-handle},
  this.rule.put-handle {put-handle},
  this.rule.sero {Sero, sero},
}

define _put(h: &put-handle, x: &int16): unit {
  put-int16(h, *x)
}

define _get(h: &get-handle): ?meta int16 {
  try v = get-int16(h) in
  Right(quote {v})
}

inline int16-sero: sero(int16, int16) {
  Sero of {
    put = _put,
    get = _get,
  }
}

define zen(): unit {
  pin val = -12345 in
  match decode(int16-sero, encode(int16-sero, val, 8)) {
  | Left(_) =>
    print("left")
  | Right(v) =>
    printf("value: {}\n", [show-int(sext-int16-int(v))])
  }
}
