import {
  core.rune.show {show-rune},
  this.move.common.get {get-int32},
  this.move.common.put {put-int32},
  this.move.decode {decode},
  this.move.encode {encode},
  this.rule.get-handle {get-handle},
  this.rule.put-handle {put-handle},
  this.rule.sero {Sero, sero},
}

define _put(h: &put-handle, x: &rune): unit {
  put-int32(h, magic cast(&rune, int32, x))
}

define _get(h: &get-handle): ?meta rune {
  try v = get-int32(h) in
  Right(quote {magic cast(int32, rune, v)})
}

inline rune-sero: sero(rune, rune) {
  Sero of {
    put = _put,
    get = _get,
  }
}

define zen(): unit {
  pin val = `あ` in
  match decode(rune-sero, encode(rune-sero, val, 4)) {
  | Left(_) =>
    print("left")
  | Right(v) =>
    printf("value: {}\n", [show-rune(v)])
  }
}
